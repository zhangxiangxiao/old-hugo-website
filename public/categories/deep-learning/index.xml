<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Deep Learning on Xiang Zhang</title>
    <link>http://xzh.me/categories/deep-learning/</link>
    <description>Recent content in Deep Learning on Xiang Zhang</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 28 Jan 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://xzh.me/categories/deep-learning/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Common Sense: Unsupervised Learning or Machine Evolution?</title>
      <link>http://xzh.me/posts/commonsense/</link>
      <pubDate>Thu, 28 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://xzh.me/posts/commonsense/</guid>
      <description>Today I saw a post from Mark Zuckerberg on his project of automating a home. That great project is so awesome that it could probably change the future of human living. Along with the post there are arguments that common sense may be obtained through unsupervised learning. But personally I do not buy these arguments, at least not in the current form of unsupervised learning.
The intuition that a model can obtain common sense through unsupervised process is not straightforward to me.</description>
    </item>
    
    <item>
      <title>Evolve to Sum</title>
      <link>http://xzh.me/posts/evolvetosum/</link>
      <pubDate>Sat, 23 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://xzh.me/posts/evolvetosum/</guid>
      <description>Here is one simple question: how to make machines learn to sum up two numbers? Of course, this problem largely depends on how the numbers are represented. If they are represented in some finite-precision float-point format, a simple regression where both weights are one would solve the problem. But that&amp;rsquo;s not what I mean here. What I mean is, given the symbolic representation of numbers (i.e., each number is a sequence of digits), how could a machine learn to sum them up?</description>
    </item>
    
    <item>
      <title>On April Fool&#39;s: What is Wrong with RNN?</title>
      <link>http://xzh.me/posts/aprilfoolrnn/</link>
      <pubDate>Wed, 01 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>http://xzh.me/posts/aprilfoolrnn/</guid>
      <description>Google&amp;rsquo;s April fool surprise: reading characters in reverse order (https://com.google/).
It happened to be the case that the character order in Crepe (https://github.com/zhangxiangxiao/Crepe) is also reversed.
The original thought was that aligning the end of a document to a fixed position (in this case at the beginning) could make it easier for the fully-connected layers to associate meaning with the ending context window.
This may have the effect of biasing classification towards the end reading of a text, which has a somewhat distant relationship with how recurrent neural network representation can be used for classification, since it decays the influence of document at the beginning but not so much at the end.</description>
    </item>
    
    <item>
      <title>The Landscape of Deep Learning</title>
      <link>http://xzh.me/posts/deeplearninglandscape/</link>
      <pubDate>Tue, 27 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://xzh.me/posts/deeplearninglandscape/</guid>
      <description>This blog summarizes an answer I posted to a question regarding what kinds of research are there for deep learning, in Zhihu, a Chinese equivalence of Quora. Surprisingly, that answer drew a lot of attention from many students and young researchers in China and it is currently ranked the second best answer in the subcategory of &amp;ldquo;deep learning&amp;rdquo;. I hope the summarization here could offer my bit of thought to a broader audience by translating that answer to English.</description>
    </item>
    
  </channel>
</rss>